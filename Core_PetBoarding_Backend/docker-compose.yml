services:
  petboarding_api:
    image: ${DOCKER_REGISTRY-}petboardingapi
    container_name: petboarding.api
    build:
      context: ..
      dockerfile: Core_PetBoarding_Backend/PetBoarding_Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5001;http://+:5000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - SIGNOZ_OTEL_ENDPOINT=http://signoz-otel-collector:4317
      - OTEL_SERVICE_NAME=PetBoarding.Api
      - OTEL_RESOURCE_ATTRIBUTES=service.name=PetBoarding.Api,service.version=1.0.0
    ports:
      - '5000:5000'
      - '5001:5001'
    volumes:
      - ${USERPROFILE}\.aspnet\https:/https:ro
    depends_on:
      postgres.database:
        condition: service_healthy
      memcached:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      signoz-otel-collector:
        condition: service_started
    restart: unless-stopped

  petboarding_taskworker:
    image: ${DOCKER_REGISTRY-}petboardingtaskworker
    container_name: petboarding.taskworker
    build:
      context: ..
      dockerfile: Core_PetBoarding_Backend/PetBoarding_TaskWorker/Dockerfile
    environment:
      - DOTNET_ENVIRONMENT=Development
      - ConnectionStrings__Database=Host=petboarding.postgres.database:5432;Database=petboarding;Username=postgres;Password=postgres
      - TaskWorker__ExpiredBasketCleanupIntervalMinutes=10
      - TaskWorker__BasketExpirationMinutes=30
      - TaskWorker__ExpiredReservationProcessingIntervalMinutes=15
      - SIGNOZ_OTEL_ENDPOINT=http://signoz-otel-collector:4317
      - OTEL_SERVICE_NAME=PetBoarding.TaskWorker
      - OTEL_RESOURCE_ATTRIBUTES=service.name=PetBoarding.TaskWorker,service.version=1.0.0
    depends_on:
      petboarding_api:
        condition: service_started
      postgres.database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      signoz-otel-collector:
        condition: service_started
    restart: unless-stopped
    deploy:
      replicas: 1

  postgres.database:
    image: postgres:latest
    container_name: petboarding.postgres.database
    environment:
      - POSTGRES_DB=petboarding
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/petboarding-db:/var/lib/postgresql/data
      - ./PetBoarding_TaskWorker/init-quartz.sql:/docker-entrypoint-initdb.d/init-quartz.sql
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d petboarding']
      interval: 5s
      timeout: 5s
      retries: 5

  memcached:
    image: memcached:latest
    container_name: petboarding.memcached
    command: memcached -m 256 -p 11211 -u memcache -l 0.0.0.0
    ports:
      - "11211:11211"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: petboarding.rabbitmq
    hostname: petboarding-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: petboarding
      RABBITMQ_DEFAULT_PASS: petboarding123
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - ./.containers/rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # SigNoz Services
  clickhouse:
    image: clickhouse/clickhouse-server:23.7
    container_name: signoz-clickhouse
    hostname: clickhouse
    ports:
      - "9000:9000"
      - "8123:8123"
    volumes:
      - ./.containers/signoz-clickhouse:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_DB=signoz
    restart: unless-stopped

  signoz-otel-collector:
    image: signoz/signoz-otel-collector:0.88.11
    container_name: signoz-otel-collector
    hostname: otel-collector
    command: ["--config=/etc/otelcol-contrib/otel-collector-config.yaml"]
    volumes:
      - ./signoz/otel-collector-config.yaml:/etc/otelcol-contrib/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus metrics
    depends_on:
      - clickhouse
    restart: unless-stopped

  signoz-query-service:
    image: signoz/query-service:0.39.0
    container_name: signoz-query-service
    hostname: query-service
    environment:
      - ClickHouseUrl=tcp://clickhouse:9000
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
      - SIGNOZ_LOCAL_DB_PATH=/var/lib/signoz/signoz.db
    ports:
      - "8080:8080"
    volumes:
      - ./.containers/signoz-data:/var/lib/signoz
    depends_on:
      - clickhouse
    restart: unless-stopped

  signoz-frontend:
    image: signoz/frontend:0.39.0
    container_name: signoz-frontend
    hostname: frontend
    ports:
      - "3301:3301"
    environment:
      - FRONTEND_API_ENDPOINT=http://signoz-query-service:8080
    depends_on:
      - signoz-query-service
    restart: unless-stopped
